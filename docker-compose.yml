services:
  # Redpanda - Kafka-compatible streaming platform (no Zookeeper needed)
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:latest
    container_name: sabot-redpanda
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
      - --default-log-level=info
    ports:
      - "18081:18081"  # Schema Registry
      - "18082:18082"  # HTTP Proxy
      - "19092:19092"  # Kafka API (external)
      - "19644:9644"   # Admin API
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - sabot-network

  # Redpanda Console - Web UI for monitoring
  console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: sabot-console
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    ports:
      - "8080:8080"
    depends_on:
      - redpanda
    networks:
      - sabot-network

  # PostgreSQL - For DBOS durable execution (optional)
  postgres:
    image: postgres:16-alpine
    container_name: sabot-postgres
    environment:
      POSTGRES_USER: sabot
      POSTGRES_PASSWORD: sabot
      POSTGRES_DB: sabot
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sabot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sabot-network

  # Redis - For distributed state (optional)
  redis:
    image: redis:7-alpine
    container_name: sabot-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - sabot-network

networks:
  sabot-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
