[build-system]
requires = ["setuptools>=61.0", "Cython>=3.0.0", "numpy>=1.21.0"]
build-backend = "setuptools.build_meta"

# Submodules
# To use Tonbo backend, clone the submodule:
# git submodule update --init --recursive tonbo
#
# To use Arrow for development builds, clone the submodule:
# git submodule update --init --recursive third-party/arrow

[project]
name = "sabot"
version = "0.1.0"
description = "High-performance columnar streaming with Arrow + Faust-inspired agents"
authors = [
    {name = "Sabot Team", email = "team@sabot.io"},
]
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    # NO pyarrow from pip - we use vendored Arrow C++ via Cython bindings
    # See: vendor/arrow/ (built via build.py)
    "asyncio-mqtt>=0.11.0",
    "uvloop>=0.17.0",
    "structlog>=22.0.0",
    "rich>=12.0.0",
    "typer>=0.7.0",
    "pydantic>=2.0.0",
    "aiokafka>=0.8.0",
    "confluent-kafka>=2.0.0",
    "fastavro>=1.7.0",
    "orjson>=3.9.0",
    "msgpack>=1.0.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "numba>=0.58.0",
    "psutil>=5.9.0",
    "prometheus-client>=0.16.0",
    "datadog>=0.44.0",
    "uvicorn[standard]>=0.23.0",
    "fastapi>=0.104.0",
    "aiohttp>=3.9.0",
    "httpx>=0.25.0",
    "pendulum>=2.1.0",
    "click>=8.0.0",
    "networkx>=3.1.0",
    "scikit-learn>=1.3.0",
    "xgboost>=1.7.0",
    "lightgbm>=4.0.0",
    "statsmodels>=0.14.0",
    "prophet>=1.1.0",
    "sentry-sdk>=1.31.0",
    "python-dotenv>=1.0.0",
    "python-multipart>=0.0.6",
    "psutil>=5.9.0",  # For system resource detection
    "prometheus-client>=0.19.0",  # For metrics collection
    "mode>=2.0.0",  # For service management and supervision
    "mode-streaming>=0.1.0",  # Additional mode streaming support
    # DBOS-inspired durable execution
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "dbos>=0.1.0",
    # High-performance Redis client (use fastredis if available)
    # "fastredis>=0.1.0",  # Uncomment when available on PyPI
]

[project.optional-dependencies]
# Note: Flight support is built into vendored Arrow C++, no extra pip package needed
flight = []  # Arrow Flight is built in vendor/arrow/cpp with -DARROW_FLIGHT=ON
# gpu = ["cudf>=22.0.0", "cupy>=12.0.0", "raft-dask>=23.0.0", "pylibraft>=23.0.0"]  # Temporarily disabled
sql = ["duckdb>=0.7.0"]
kafka = ["aiokafka>=0.8.0", "confluent-kafka>=2.0.0"]
redis = ["redis>=5.0.0"]
# rocksdb = ["rocksdb>=1.0.0"]  # Temporarily disabled due to version conflicts
channels = [
    "sabot[kafka]",
    "sabot[redis]",
    "sabot[flight]",
    # "sabot[rocksdb]",  # Temporarily disabled
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
    "notebook>=7.0.0",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.0",
]
all = [
    "sabot[flight,gpu,sql,dev]",
]

[project.scripts]
sabot = "sabot.cli:main"
sabot-worker = "sabot.cli:worker"
sabot-topics = "sabot.cli:topics"
sabot-agents = "sabot.cli:agents"
sabot-interactive = "sabot.cli:interactive"
sabot-web = "sabot.cli:web"

[project.urls]
Homepage = "https://github.com/sabot/sabot"
Documentation = "https://sabot.readthedocs.io/"
Repository = "https://github.com/sabot/sabot"
Issues = "https://github.com/sabot/sabot/issues"

[tool.setuptools]
zip-safe = false
include-package-data = true
py-modules = []

[tool.setuptools.packages]
find = {where = ["."], include = ["sabot"], exclude = ["sabot.examples*", "sabot.tests*"]}

[tool.setuptools.package-data]
sabot = ["py.typed"]

[tool.cython-lineno]
enabled = true

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sabot._cython.*",
    "pyarrow.*",
    "confluent_kafka.*",
    "aiokafka.*",
    "prometheus_client.*",
    "datadog.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=sabot",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"